---
const { banks, categories } = Astro.props;
const filteredBanks = banks.map(({ name, slug }) => ({
  label: name,
  href: `/issuers/${slug}`,
}));

const filteredCategories = categories.map(({ name, slug }) => ({
  label: name,
  href: `/categories/${slug}`,
}));

const links = [
  {
    label: "Home",
    href: "/",
  },
  {
    label: "Categories",
    href: "/categories",
    links: filteredCategories,
    icon: "fas fa-chevron-down",
  },
  {
    label: "Issuers",
    href: "/issuers",
    links: filteredBanks,
    icon: "fas fa-chevron-down",
  },
  {
    label: "Blog",
    href: "/",
  },
  {
    label: "About",
    href: "/",
  },
  {
    icon: "fab fa-twitter",
    href: "//x.com/amazingcreditc",
    target: "_blank",
  },
];
---

<header class="bg-yellow-500 border-b-6 border-black z-40">
  <div
    class="container mx-auto px-5 py-5 lg:py-10 flex items-center justify-between"
  >
    <a href="/">
      <img
        src="/logo-circle.png"
        alt="Amazing Credit Cards"
        class="h-20 lg:h-28 -mb-16 lg:-mb-44 relative bottom-2 lg:bottom-4"
      />
    </a>
    <button
      data-menu-toggler
      id="hamburger"
      class="border-brutal-sm px-3 py-1 bg-white text-sm hover:bg-yellow-100 transition-colors duration-300 lg:hidden"
    >
      <i class="fas fa-bars"></i>
    </button>
    <nav class="max-lg:hidden">
      <ul class="flex items-center gap-4">
        {
          links.map((link) =>
            link.links ? (
              <li class="relative group">
                <a
                  href={link.href}
                  class="border-brutal-sm px-3 py-1 bg-white text-sm hover:bg-yellow-100 transition-colors duration-300"
                  target={link.target}
                >
                  {link.label}
                  {link.icon && <i class={link.icon} />}
                </a>
                <div class="absolute left-0 top-full pt-4 opacity-0 pointer-events-none transition-all duration-300 group-hover:opacity-100 group-hover:pointer-events-auto ">
                  <ul class=" bg-white border-brutal p-4 flex flex-col gap-2">
                    {link.links.map((sublink) => (
                      <li>
                        <a class="whitespace-nowrap" href={sublink.href}>
                          {sublink.label}
                        </a>
                      </li>
                    ))}
                  </ul>
                </div>
              </li>
            ) : (
              <li>
                <a
                  href={link.href}
                  class="border-brutal-sm px-3 py-1 bg-white text-sm hover:bg-yellow-100 transition-colors duration-300"
                  target={link.target}
                >
                  {link.label}
                  {link.icon && <i class={link.icon} />}
                </a>
              </li>
            )
          )
        }
      </ul>
    </nav>
  </div>
</header>

<aside
  id="aside"
  class="fixed top-0 -right-[28rem] w-[70%] max-w-md bg-yellow-500 z-50 border-l-6 border-black transition-all duration-500 p-5 lg:p-10 pb-28 flex flex-col h-screen"
>
  <div class="flex flex-col flex-1">
    <div class="flex justify-end">
      <button
        id="hamburger"
        data-menu-toggler
        class="border-brutal-sm px-3 py-1 bg-white text-sm hover:bg-yellow-100 transition-colors duration-300 lg:hidden"
      >
        <i class="fas fa-xmark"></i>
      </button>
    </div>
    <nav class="mt-16 flex-1 flex flex-col">
      <ul class="flex flex-col gap-8 items-start">
        {
          links.map((link) =>
            link.links ? (
              <li class="relative cursor-pointer" data-submenu-toggler="true">
                <div class="border-brutal-sm px-3 py-1 bg-white hover:bg-yellow-100 transition-colors duration-300 w-fit">
                  <a href={link.href} class="" target={link.target}>
                    {link.label}
                  </a>
                  {link.icon && <i class={link.icon} />}
                </div>
                <ul class="pl-6 flex-col gap-4 mt-4 hidden">
                  {link.links.map((sublink) => (
                    <li>
                      <a
                        class="bg-white border-brutal-sm whitespace-nowrap py-1 px-3 text-sm"
                        href={sublink.href}
                      >
                        {sublink.label}
                      </a>
                    </li>
                  ))}
                </ul>
              </li>
            ) : (
              <li>
                <a
                  href={link.href}
                  class="border-brutal-sm px-3 py-1 bg-white hover:bg-yellow-100 transition-colors duration-300"
                  target={link.target}
                >
                  {link.label}
                  {link.icon && <i class={link.icon} />}
                </a>
              </li>
            )
          )
        }
      </ul>
    </nav>
  </div>
</aside>

<div
  data-menu-toggler
  id="backdrop"
  class="fixed h-screen w-screen bg-black/70 z-40 opacity-0 pointer-events-none"
>
</div>

<script>
  const aside = document.querySelector("#aside") as HTMLDivElement;
  const backdrop = document.querySelector("#backdrop") as HTMLDivElement;
  const menuTogglers = document.querySelectorAll(
    "[data-menu-toggler]"
  ) as NodeListOf<HTMLButtonElement>;

  menuTogglers.forEach((toggler) =>
    toggler.addEventListener("click", () => {
      aside.classList.toggle("right-0");
      aside.classList.toggle("-right-[28rem]");
      backdrop.classList.toggle("opacity-0");
      backdrop.classList.toggle("pointer-events-none");
    })
  );

  const subMenuToggler = document.querySelectorAll(
    "[data-submenu-toggler]"
  ) as NodeListOf<HTMLButtonElement>;

  subMenuToggler.forEach((toggler) =>
    toggler.addEventListener("click", () => {
      const subMenu = toggler.querySelector("ul") as HTMLUListElement;
      subMenu.classList.toggle("hidden");
      subMenu.classList.toggle("flex");
    })
  );
</script>
